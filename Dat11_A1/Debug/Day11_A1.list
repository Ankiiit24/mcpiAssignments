
Day11_A1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003d0  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000558  08000558  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000558  08000558  00002004  2**0
                  CONTENTS
  4 .ARM          00000000  08000558  08000558  00002004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000558  08000558  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000558  08000558  00001558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800055c  0800055c  0000155c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  08000560  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00002004  2**0
                  CONTENTS
 10 .bss          00000020  20000004  20000004  00002004  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000024  20000024  00002004  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000150f  00000000  00000000  0000202e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000520  00000000  00000000  0000353d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000e0  00000000  00000000  00003a60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000093  00000000  00000000  00003b40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000180b7  00000000  00000000  00003bd3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001430  00000000  00000000  0001bc8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008bd4d  00000000  00000000  0001d0ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a8e07  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001dc  00000000  00000000  000a8e4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000001f  00000000  00000000  000a9028  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000005f  00000000  00000000  000a9047  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000004 	.word	0x20000004
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000540 	.word	0x08000540

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000008 	.word	0x20000008
 80001c4:	08000540 	.word	0x08000540

080001c8 <DelayMs>:
uint32_t DWT_Init(void);

#ifndef DELAY_MS
#define DELAY_MS

static inline void DelayMs(volatile uint32_t ms) {
 80001c8:	b480      	push	{r7}
 80001ca:	b085      	sub	sp, #20
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
	uint32_t init_ticks = DWT->CYCCNT;
 80001d0:	4b0e      	ldr	r3, [pc, #56]	@ (800020c <DelayMs+0x44>)
 80001d2:	685b      	ldr	r3, [r3, #4]
 80001d4:	60fb      	str	r3, [r7, #12]
	uint32_t ticks = (SystemCoreClock / 1000);
 80001d6:	4b0e      	ldr	r3, [pc, #56]	@ (8000210 <DelayMs+0x48>)
 80001d8:	681b      	ldr	r3, [r3, #0]
 80001da:	4a0e      	ldr	r2, [pc, #56]	@ (8000214 <DelayMs+0x4c>)
 80001dc:	fba2 2303 	umull	r2, r3, r2, r3
 80001e0:	099b      	lsrs	r3, r3, #6
 80001e2:	60bb      	str	r3, [r7, #8]
	ms *= ticks;
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	68ba      	ldr	r2, [r7, #8]
 80001e8:	fb02 f303 	mul.w	r3, r2, r3
 80001ec:	607b      	str	r3, [r7, #4]
	while ((DWT->CYCCNT - init_ticks) < ms);
 80001ee:	bf00      	nop
 80001f0:	4b06      	ldr	r3, [pc, #24]	@ (800020c <DelayMs+0x44>)
 80001f2:	685a      	ldr	r2, [r3, #4]
 80001f4:	68fb      	ldr	r3, [r7, #12]
 80001f6:	1ad2      	subs	r2, r2, r3
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	429a      	cmp	r2, r3
 80001fc:	d3f8      	bcc.n	80001f0 <DelayMs+0x28>
}
 80001fe:	bf00      	nop
 8000200:	bf00      	nop
 8000202:	3714      	adds	r7, #20
 8000204:	46bd      	mov	sp, r7
 8000206:	bc80      	pop	{r7}
 8000208:	4770      	bx	lr
 800020a:	bf00      	nop
 800020c:	e0001000 	.word	0xe0001000
 8000210:	20000000 	.word	0x20000000
 8000214:	10624dd3 	.word	0x10624dd3

08000218 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000218:	b580      	push	{r7, lr}
 800021a:	b082      	sub	sp, #8
 800021c:	af00      	add	r7, sp, #0
	    SystemInit();
 800021e:	f000 f8b9 	bl	8000394 <SystemInit>
		TimerInit();
 8000222:	f000 f8ed 	bl	8000400 <TimerInit>
		SwitchInit(SWITCH);
 8000226:	2000      	movs	r0, #0
 8000228:	f000 f852 	bl	80002d0 <SwitchInit>
		int duty;


		while(1)
		{
			for(duty = 1; duty <= 300; duty++) {
 800022c:	2301      	movs	r3, #1
 800022e:	607b      	str	r3, [r7, #4]
 8000230:	e013      	b.n	800025a <main+0x42>
				TIM8->CCR1=duty;
 8000232:	4a17      	ldr	r2, [pc, #92]	@ (8000290 <main+0x78>)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	6353      	str	r3, [r2, #52]	@ 0x34
				while(exti0_flag == 0);
 8000238:	bf00      	nop
 800023a:	4b16      	ldr	r3, [pc, #88]	@ (8000294 <main+0x7c>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	2b00      	cmp	r3, #0
 8000240:	d0fb      	beq.n	800023a <main+0x22>
				duty = duty +10;
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	330a      	adds	r3, #10
 8000246:	607b      	str	r3, [r7, #4]
				exti0_flag = 0;
 8000248:	4b12      	ldr	r3, [pc, #72]	@ (8000294 <main+0x7c>)
 800024a:	2200      	movs	r2, #0
 800024c:	601a      	str	r2, [r3, #0]
				DelayMs(50);
 800024e:	2032      	movs	r0, #50	@ 0x32
 8000250:	f7ff ffba 	bl	80001c8 <DelayMs>
			for(duty = 1; duty <= 300; duty++) {
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	3301      	adds	r3, #1
 8000258:	607b      	str	r3, [r7, #4]
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8000260:	dde7      	ble.n	8000232 <main+0x1a>
			}
				for(;duty>=1;) {
 8000262:	e010      	b.n	8000286 <main+0x6e>
					TIM8->CCR1=duty;
 8000264:	4a0a      	ldr	r2, [pc, #40]	@ (8000290 <main+0x78>)
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	6353      	str	r3, [r2, #52]	@ 0x34
					while(exti0_flag == 0);
 800026a:	bf00      	nop
 800026c:	4b09      	ldr	r3, [pc, #36]	@ (8000294 <main+0x7c>)
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	2b00      	cmp	r3, #0
 8000272:	d0fb      	beq.n	800026c <main+0x54>
					duty = duty -10;
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	3b0a      	subs	r3, #10
 8000278:	607b      	str	r3, [r7, #4]
					exti0_flag = 0;
 800027a:	4b06      	ldr	r3, [pc, #24]	@ (8000294 <main+0x7c>)
 800027c:	2200      	movs	r2, #0
 800027e:	601a      	str	r2, [r3, #0]
					DelayMs(50);
 8000280:	2032      	movs	r0, #50	@ 0x32
 8000282:	f7ff ffa1 	bl	80001c8 <DelayMs>
				for(;duty>=1;) {
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	2b00      	cmp	r3, #0
 800028a:	dceb      	bgt.n	8000264 <main+0x4c>
			for(duty = 1; duty <= 300; duty++) {
 800028c:	e7ce      	b.n	800022c <main+0x14>
 800028e:	bf00      	nop
 8000290:	40010400 	.word	0x40010400
 8000294:	20000020 	.word	0x20000020

08000298 <__NVIC_EnableIRQ>:
 8000298:	b480      	push	{r7}
 800029a:	b083      	sub	sp, #12
 800029c:	af00      	add	r7, sp, #0
 800029e:	4603      	mov	r3, r0
 80002a0:	71fb      	strb	r3, [r7, #7]
 80002a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002a6:	2b00      	cmp	r3, #0
 80002a8:	db0b      	blt.n	80002c2 <__NVIC_EnableIRQ+0x2a>
 80002aa:	79fb      	ldrb	r3, [r7, #7]
 80002ac:	f003 021f 	and.w	r2, r3, #31
 80002b0:	4906      	ldr	r1, [pc, #24]	@ (80002cc <__NVIC_EnableIRQ+0x34>)
 80002b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002b6:	095b      	lsrs	r3, r3, #5
 80002b8:	2001      	movs	r0, #1
 80002ba:	fa00 f202 	lsl.w	r2, r0, r2
 80002be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80002c2:	bf00      	nop
 80002c4:	370c      	adds	r7, #12
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr
 80002cc:	e000e100 	.word	0xe000e100

080002d0 <SwitchInit>:
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b082      	sub	sp, #8
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	4b2a      	ldr	r3, [pc, #168]	@ (8000384 <SwitchInit+0xb4>)
 80002da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002dc:	4a29      	ldr	r2, [pc, #164]	@ (8000384 <SwitchInit+0xb4>)
 80002de:	f043 0301 	orr.w	r3, r3, #1
 80002e2:	6313      	str	r3, [r2, #48]	@ 0x30
 80002e4:	4b28      	ldr	r3, [pc, #160]	@ (8000388 <SwitchInit+0xb8>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	687a      	ldr	r2, [r7, #4]
 80002ea:	0052      	lsls	r2, r2, #1
 80002ec:	3201      	adds	r2, #1
 80002ee:	2101      	movs	r1, #1
 80002f0:	4091      	lsls	r1, r2
 80002f2:	687a      	ldr	r2, [r7, #4]
 80002f4:	0052      	lsls	r2, r2, #1
 80002f6:	2001      	movs	r0, #1
 80002f8:	fa00 f202 	lsl.w	r2, r0, r2
 80002fc:	430a      	orrs	r2, r1
 80002fe:	43d2      	mvns	r2, r2
 8000300:	4611      	mov	r1, r2
 8000302:	4a21      	ldr	r2, [pc, #132]	@ (8000388 <SwitchInit+0xb8>)
 8000304:	400b      	ands	r3, r1
 8000306:	6013      	str	r3, [r2, #0]
 8000308:	4b1f      	ldr	r3, [pc, #124]	@ (8000388 <SwitchInit+0xb8>)
 800030a:	689b      	ldr	r3, [r3, #8]
 800030c:	687a      	ldr	r2, [r7, #4]
 800030e:	0052      	lsls	r2, r2, #1
 8000310:	3201      	adds	r2, #1
 8000312:	2101      	movs	r1, #1
 8000314:	4091      	lsls	r1, r2
 8000316:	687a      	ldr	r2, [r7, #4]
 8000318:	0052      	lsls	r2, r2, #1
 800031a:	2001      	movs	r0, #1
 800031c:	fa00 f202 	lsl.w	r2, r0, r2
 8000320:	430a      	orrs	r2, r1
 8000322:	43d2      	mvns	r2, r2
 8000324:	4611      	mov	r1, r2
 8000326:	4a18      	ldr	r2, [pc, #96]	@ (8000388 <SwitchInit+0xb8>)
 8000328:	400b      	ands	r3, r1
 800032a:	6093      	str	r3, [r2, #8]
 800032c:	4b16      	ldr	r3, [pc, #88]	@ (8000388 <SwitchInit+0xb8>)
 800032e:	68db      	ldr	r3, [r3, #12]
 8000330:	687a      	ldr	r2, [r7, #4]
 8000332:	0052      	lsls	r2, r2, #1
 8000334:	3201      	adds	r2, #1
 8000336:	2101      	movs	r1, #1
 8000338:	4091      	lsls	r1, r2
 800033a:	687a      	ldr	r2, [r7, #4]
 800033c:	0052      	lsls	r2, r2, #1
 800033e:	2001      	movs	r0, #1
 8000340:	fa00 f202 	lsl.w	r2, r0, r2
 8000344:	430a      	orrs	r2, r1
 8000346:	43d2      	mvns	r2, r2
 8000348:	4611      	mov	r1, r2
 800034a:	4a0f      	ldr	r2, [pc, #60]	@ (8000388 <SwitchInit+0xb8>)
 800034c:	400b      	ands	r3, r1
 800034e:	60d3      	str	r3, [r2, #12]
 8000350:	4b0e      	ldr	r3, [pc, #56]	@ (800038c <SwitchInit+0xbc>)
 8000352:	68db      	ldr	r3, [r3, #12]
 8000354:	4a0d      	ldr	r2, [pc, #52]	@ (800038c <SwitchInit+0xbc>)
 8000356:	f043 0301 	orr.w	r3, r3, #1
 800035a:	60d3      	str	r3, [r2, #12]
 800035c:	4b0b      	ldr	r3, [pc, #44]	@ (800038c <SwitchInit+0xbc>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	4a0a      	ldr	r2, [pc, #40]	@ (800038c <SwitchInit+0xbc>)
 8000362:	f043 0301 	orr.w	r3, r3, #1
 8000366:	6013      	str	r3, [r2, #0]
 8000368:	4b09      	ldr	r3, [pc, #36]	@ (8000390 <SwitchInit+0xc0>)
 800036a:	689b      	ldr	r3, [r3, #8]
 800036c:	4a08      	ldr	r2, [pc, #32]	@ (8000390 <SwitchInit+0xc0>)
 800036e:	f023 030f 	bic.w	r3, r3, #15
 8000372:	6093      	str	r3, [r2, #8]
 8000374:	2006      	movs	r0, #6
 8000376:	f7ff ff8f 	bl	8000298 <__NVIC_EnableIRQ>
 800037a:	bf00      	nop
 800037c:	3708      	adds	r7, #8
 800037e:	46bd      	mov	sp, r7
 8000380:	bd80      	pop	{r7, pc}
 8000382:	bf00      	nop
 8000384:	40023800 	.word	0x40023800
 8000388:	40020000 	.word	0x40020000
 800038c:	40013c00 	.word	0x40013c00
 8000390:	40013800 	.word	0x40013800

08000394 <SystemInit>:
 8000394:	b580      	push	{r7, lr}
 8000396:	af00      	add	r7, sp, #0
 8000398:	f000 f802 	bl	80003a0 <DWT_Init>
 800039c:	bf00      	nop
 800039e:	bd80      	pop	{r7, pc}

080003a0 <DWT_Init>:
 80003a0:	b480      	push	{r7}
 80003a2:	af00      	add	r7, sp, #0
 80003a4:	4b14      	ldr	r3, [pc, #80]	@ (80003f8 <DWT_Init+0x58>)
 80003a6:	68db      	ldr	r3, [r3, #12]
 80003a8:	4a13      	ldr	r2, [pc, #76]	@ (80003f8 <DWT_Init+0x58>)
 80003aa:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80003ae:	60d3      	str	r3, [r2, #12]
 80003b0:	4b11      	ldr	r3, [pc, #68]	@ (80003f8 <DWT_Init+0x58>)
 80003b2:	68db      	ldr	r3, [r3, #12]
 80003b4:	4a10      	ldr	r2, [pc, #64]	@ (80003f8 <DWT_Init+0x58>)
 80003b6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80003ba:	60d3      	str	r3, [r2, #12]
 80003bc:	4b0f      	ldr	r3, [pc, #60]	@ (80003fc <DWT_Init+0x5c>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	4a0e      	ldr	r2, [pc, #56]	@ (80003fc <DWT_Init+0x5c>)
 80003c2:	f023 0301 	bic.w	r3, r3, #1
 80003c6:	6013      	str	r3, [r2, #0]
 80003c8:	4b0c      	ldr	r3, [pc, #48]	@ (80003fc <DWT_Init+0x5c>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	4a0b      	ldr	r2, [pc, #44]	@ (80003fc <DWT_Init+0x5c>)
 80003ce:	f043 0301 	orr.w	r3, r3, #1
 80003d2:	6013      	str	r3, [r2, #0]
 80003d4:	4b09      	ldr	r3, [pc, #36]	@ (80003fc <DWT_Init+0x5c>)
 80003d6:	2200      	movs	r2, #0
 80003d8:	605a      	str	r2, [r3, #4]
 80003da:	bf00      	nop
 80003dc:	bf00      	nop
 80003de:	bf00      	nop
 80003e0:	4b06      	ldr	r3, [pc, #24]	@ (80003fc <DWT_Init+0x5c>)
 80003e2:	685b      	ldr	r3, [r3, #4]
 80003e4:	2b00      	cmp	r3, #0
 80003e6:	bf0c      	ite	eq
 80003e8:	2301      	moveq	r3, #1
 80003ea:	2300      	movne	r3, #0
 80003ec:	b2db      	uxtb	r3, r3
 80003ee:	4618      	mov	r0, r3
 80003f0:	46bd      	mov	sp, r7
 80003f2:	bc80      	pop	{r7}
 80003f4:	4770      	bx	lr
 80003f6:	bf00      	nop
 80003f8:	e000edf0 	.word	0xe000edf0
 80003fc:	e0001000 	.word	0xe0001000

08000400 <TimerInit>:
 8000400:	b480      	push	{r7}
 8000402:	af00      	add	r7, sp, #0
 8000404:	4b24      	ldr	r3, [pc, #144]	@ (8000498 <TimerInit+0x98>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000408:	4a23      	ldr	r2, [pc, #140]	@ (8000498 <TimerInit+0x98>)
 800040a:	f043 0304 	orr.w	r3, r3, #4
 800040e:	6313      	str	r3, [r2, #48]	@ 0x30
 8000410:	4b22      	ldr	r3, [pc, #136]	@ (800049c <TimerInit+0x9c>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	4a21      	ldr	r2, [pc, #132]	@ (800049c <TimerInit+0x9c>)
 8000416:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800041a:	6013      	str	r3, [r2, #0]
 800041c:	4b1f      	ldr	r3, [pc, #124]	@ (800049c <TimerInit+0x9c>)
 800041e:	6a1b      	ldr	r3, [r3, #32]
 8000420:	4a1e      	ldr	r2, [pc, #120]	@ (800049c <TimerInit+0x9c>)
 8000422:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
 8000426:	6213      	str	r3, [r2, #32]
 8000428:	4b1b      	ldr	r3, [pc, #108]	@ (8000498 <TimerInit+0x98>)
 800042a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800042c:	4a1a      	ldr	r2, [pc, #104]	@ (8000498 <TimerInit+0x98>)
 800042e:	f043 0302 	orr.w	r3, r3, #2
 8000432:	6453      	str	r3, [r2, #68]	@ 0x44
 8000434:	4b1a      	ldr	r3, [pc, #104]	@ (80004a0 <TimerInit+0xa0>)
 8000436:	220f      	movs	r2, #15
 8000438:	629a      	str	r2, [r3, #40]	@ 0x28
 800043a:	4b19      	ldr	r3, [pc, #100]	@ (80004a0 <TimerInit+0xa0>)
 800043c:	2263      	movs	r2, #99	@ 0x63
 800043e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000440:	4b17      	ldr	r3, [pc, #92]	@ (80004a0 <TimerInit+0xa0>)
 8000442:	2200      	movs	r2, #0
 8000444:	635a      	str	r2, [r3, #52]	@ 0x34
 8000446:	4b16      	ldr	r3, [pc, #88]	@ (80004a0 <TimerInit+0xa0>)
 8000448:	699b      	ldr	r3, [r3, #24]
 800044a:	4a15      	ldr	r2, [pc, #84]	@ (80004a0 <TimerInit+0xa0>)
 800044c:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8000450:	6193      	str	r3, [r2, #24]
 8000452:	4b13      	ldr	r3, [pc, #76]	@ (80004a0 <TimerInit+0xa0>)
 8000454:	699b      	ldr	r3, [r3, #24]
 8000456:	4a12      	ldr	r2, [pc, #72]	@ (80004a0 <TimerInit+0xa0>)
 8000458:	f043 0308 	orr.w	r3, r3, #8
 800045c:	6193      	str	r3, [r2, #24]
 800045e:	4b10      	ldr	r3, [pc, #64]	@ (80004a0 <TimerInit+0xa0>)
 8000460:	699b      	ldr	r3, [r3, #24]
 8000462:	4a0f      	ldr	r2, [pc, #60]	@ (80004a0 <TimerInit+0xa0>)
 8000464:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000468:	6193      	str	r3, [r2, #24]
 800046a:	4b0d      	ldr	r3, [pc, #52]	@ (80004a0 <TimerInit+0xa0>)
 800046c:	6a1b      	ldr	r3, [r3, #32]
 800046e:	4a0c      	ldr	r2, [pc, #48]	@ (80004a0 <TimerInit+0xa0>)
 8000470:	f043 0301 	orr.w	r3, r3, #1
 8000474:	6213      	str	r3, [r2, #32]
 8000476:	4b0a      	ldr	r3, [pc, #40]	@ (80004a0 <TimerInit+0xa0>)
 8000478:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800047a:	4a09      	ldr	r2, [pc, #36]	@ (80004a0 <TimerInit+0xa0>)
 800047c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000480:	6453      	str	r3, [r2, #68]	@ 0x44
 8000482:	4b07      	ldr	r3, [pc, #28]	@ (80004a0 <TimerInit+0xa0>)
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	4a06      	ldr	r2, [pc, #24]	@ (80004a0 <TimerInit+0xa0>)
 8000488:	f043 0301 	orr.w	r3, r3, #1
 800048c:	6013      	str	r3, [r2, #0]
 800048e:	bf00      	nop
 8000490:	46bd      	mov	sp, r7
 8000492:	bc80      	pop	{r7}
 8000494:	4770      	bx	lr
 8000496:	bf00      	nop
 8000498:	40023800 	.word	0x40023800
 800049c:	40020800 	.word	0x40020800
 80004a0:	40010400 	.word	0x40010400

080004a4 <Reset_Handler>:
 80004a4:	480d      	ldr	r0, [pc, #52]	@ (80004dc <LoopForever+0x2>)
 80004a6:	4685      	mov	sp, r0
 80004a8:	f7ff ff74 	bl	8000394 <SystemInit>
 80004ac:	480c      	ldr	r0, [pc, #48]	@ (80004e0 <LoopForever+0x6>)
 80004ae:	490d      	ldr	r1, [pc, #52]	@ (80004e4 <LoopForever+0xa>)
 80004b0:	4a0d      	ldr	r2, [pc, #52]	@ (80004e8 <LoopForever+0xe>)
 80004b2:	2300      	movs	r3, #0
 80004b4:	e002      	b.n	80004bc <LoopCopyDataInit>

080004b6 <CopyDataInit>:
 80004b6:	58d4      	ldr	r4, [r2, r3]
 80004b8:	50c4      	str	r4, [r0, r3]
 80004ba:	3304      	adds	r3, #4

080004bc <LoopCopyDataInit>:
 80004bc:	18c4      	adds	r4, r0, r3
 80004be:	428c      	cmp	r4, r1
 80004c0:	d3f9      	bcc.n	80004b6 <CopyDataInit>
 80004c2:	4a0a      	ldr	r2, [pc, #40]	@ (80004ec <LoopForever+0x12>)
 80004c4:	4c0a      	ldr	r4, [pc, #40]	@ (80004f0 <LoopForever+0x16>)
 80004c6:	2300      	movs	r3, #0
 80004c8:	e001      	b.n	80004ce <LoopFillZerobss>

080004ca <FillZerobss>:
 80004ca:	6013      	str	r3, [r2, #0]
 80004cc:	3204      	adds	r2, #4

080004ce <LoopFillZerobss>:
 80004ce:	42a2      	cmp	r2, r4
 80004d0:	d3fb      	bcc.n	80004ca <FillZerobss>
 80004d2:	f000 f811 	bl	80004f8 <__libc_init_array>
 80004d6:	f7ff fe9f 	bl	8000218 <main>

080004da <LoopForever>:
 80004da:	e7fe      	b.n	80004da <LoopForever>
 80004dc:	20020000 	.word	0x20020000
 80004e0:	20000000 	.word	0x20000000
 80004e4:	20000004 	.word	0x20000004
 80004e8:	08000560 	.word	0x08000560
 80004ec:	20000004 	.word	0x20000004
 80004f0:	20000024 	.word	0x20000024

080004f4 <ADC_IRQHandler>:
 80004f4:	e7fe      	b.n	80004f4 <ADC_IRQHandler>
	...

080004f8 <__libc_init_array>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	4d0d      	ldr	r5, [pc, #52]	@ (8000530 <__libc_init_array+0x38>)
 80004fc:	4c0d      	ldr	r4, [pc, #52]	@ (8000534 <__libc_init_array+0x3c>)
 80004fe:	1b64      	subs	r4, r4, r5
 8000500:	10a4      	asrs	r4, r4, #2
 8000502:	2600      	movs	r6, #0
 8000504:	42a6      	cmp	r6, r4
 8000506:	d109      	bne.n	800051c <__libc_init_array+0x24>
 8000508:	4d0b      	ldr	r5, [pc, #44]	@ (8000538 <__libc_init_array+0x40>)
 800050a:	4c0c      	ldr	r4, [pc, #48]	@ (800053c <__libc_init_array+0x44>)
 800050c:	f000 f818 	bl	8000540 <_init>
 8000510:	1b64      	subs	r4, r4, r5
 8000512:	10a4      	asrs	r4, r4, #2
 8000514:	2600      	movs	r6, #0
 8000516:	42a6      	cmp	r6, r4
 8000518:	d105      	bne.n	8000526 <__libc_init_array+0x2e>
 800051a:	bd70      	pop	{r4, r5, r6, pc}
 800051c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000520:	4798      	blx	r3
 8000522:	3601      	adds	r6, #1
 8000524:	e7ee      	b.n	8000504 <__libc_init_array+0xc>
 8000526:	f855 3b04 	ldr.w	r3, [r5], #4
 800052a:	4798      	blx	r3
 800052c:	3601      	adds	r6, #1
 800052e:	e7f2      	b.n	8000516 <__libc_init_array+0x1e>
 8000530:	08000558 	.word	0x08000558
 8000534:	08000558 	.word	0x08000558
 8000538:	08000558 	.word	0x08000558
 800053c:	0800055c 	.word	0x0800055c

08000540 <_init>:
 8000540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000542:	bf00      	nop
 8000544:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000546:	bc08      	pop	{r3}
 8000548:	469e      	mov	lr, r3
 800054a:	4770      	bx	lr

0800054c <_fini>:
 800054c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800054e:	bf00      	nop
 8000550:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000552:	bc08      	pop	{r3}
 8000554:	469e      	mov	lr, r3
 8000556:	4770      	bx	lr
